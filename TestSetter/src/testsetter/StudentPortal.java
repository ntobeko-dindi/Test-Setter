package testsetter;

import java.awt.HeadlessException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author XCODING
 */
public class StudentPortal extends javax.swing.JFrame {
    
    private final ArrayList<String> selection = new ArrayList<String>();//new arraylist to trackdown previous user selected answers 
    
    private final ArrayList<String> testAnswers = new ArrayList<String>();
    
    private final ArrayList<TestModel> activeTest = new ArrayList<TestModel>();
    
    private final ArrayList<String> trueOrFalseQuestions = new ArrayList<String>();
    private final ArrayList<String> trueOrFalseAnswers = new ArrayList<String>();
    
    private final ArrayList<String> usersTorFanswers = new ArrayList<String>();
    
    private final ButtonGroup group1 = new ButtonGroup();
    private final ButtonGroup group2 = new ButtonGroup();
    private final ButtonGroup group3 = new ButtonGroup();
    private final ButtonGroup group4 = new ButtonGroup();
    
    private int counter = 0;
    
    private int trueFalseCounter = 0;
    
    public StudentPortal() {
        initComponents();
        groupButton();
    }

        private void groupButton()
    {
        group1.add(one1);
        group1.add(one2);
        group1.add(one3);
        group1.add(one4);
        
        group2.add(two1);
        group2.add(two2);
        group2.add(two3);
        group2.add(two4);
        
        group3.add(three1);
        group3.add(three2);
        group3.add(three3);
        group3.add(three4);
        
        group4.add(four1);
        group4.add(four2);
        group4.add(four3);
        group4.add(four4);  
        
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TestPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblQ1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        one1 = new javax.swing.JRadioButton();
        one2 = new javax.swing.JRadioButton();
        one3 = new javax.swing.JRadioButton();
        one4 = new javax.swing.JRadioButton();
        q1 = new javax.swing.JLabel();
        two1 = new javax.swing.JRadioButton();
        two2 = new javax.swing.JRadioButton();
        two3 = new javax.swing.JRadioButton();
        two4 = new javax.swing.JRadioButton();
        q2 = new javax.swing.JLabel();
        lblQ2 = new javax.swing.JLabel();
        three1 = new javax.swing.JRadioButton();
        three2 = new javax.swing.JRadioButton();
        three3 = new javax.swing.JRadioButton();
        three4 = new javax.swing.JRadioButton();
        q3 = new javax.swing.JLabel();
        lblQ3 = new javax.swing.JLabel();
        q4 = new javax.swing.JLabel();
        lblQ4 = new javax.swing.JLabel();
        four1 = new javax.swing.JRadioButton();
        four3 = new javax.swing.JRadioButton();
        four4 = new javax.swing.JRadioButton();
        four2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnSaveAndSubmit = new javax.swing.JButton();
        btnNext4TorF = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        trueOrFalsePortionPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPaneQuestion1 = new javax.swing.JEditorPane();
        question1selection = new javax.swing.JComboBox<>();
        question2selection = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPaneQuestion2 = new javax.swing.JEditorPane();
        question3selection = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPaneQuestion3 = new javax.swing.JEditorPane();
        question4selection = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jEditorPaneQuestion4 = new javax.swing.JEditorPane();
        question5selection = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jEditorPaneQuestion5 = new javax.swing.JEditorPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        TestPanel.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setText("NAME");

        lblQ1.setText("Question 1");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 19, Short.MAX_VALUE)
        );

        one1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                one1ActionPerformed(evt);
            }
        });

        q1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        q2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblQ2.setText("Question 2");

        q3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblQ3.setText("Question 3");

        q4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblQ4.setText("Question 4");

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNext.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnNext.setText("NEXT>>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnSaveAndSubmit.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnSaveAndSubmit.setText("SAVE AND SUBMIT");
        btnSaveAndSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAndSubmitActionPerformed(evt);
            }
        });

        btnNext4TorF.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        btnNext4TorF.setText("NEXT>>");
        btnNext4TorF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNext4TorFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNext4TorF)
                .addGap(45, 45, 45)
                .addComponent(btnNext)
                .addGap(50, 50, 50)
                .addComponent(btnSaveAndSubmit)
                .addGap(146, 146, 146))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnSaveAndSubmit)
                    .addComponent(btnBack)
                    .addComponent(btnNext4TorF))
                .addContainerGap())
        );

        lblName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        trueOrFalsePortionPanel.setBackground(new java.awt.Color(255, 255, 204));
        trueOrFalsePortionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "TRUE OR FALSE QUESTIONS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 11))); // NOI18N

        jEditorPaneQuestion1.setEditable(false);
        jScrollPane1.setViewportView(jEditorPaneQuestion1);

        question1selection.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        question1selection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DEFAULT", "TRUE", "FALSE" }));

        question2selection.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        question2selection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DEFAULT", "TRUE", "FALSE" }));

        jEditorPaneQuestion2.setEditable(false);
        jScrollPane2.setViewportView(jEditorPaneQuestion2);

        question3selection.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        question3selection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DEFAULT", "TRUE", "FALSE" }));

        jEditorPaneQuestion3.setEditable(false);
        jScrollPane3.setViewportView(jEditorPaneQuestion3);

        question4selection.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        question4selection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DEFAULT", "TRUE", "FALSE" }));

        jEditorPaneQuestion4.setEditable(false);
        jScrollPane4.setViewportView(jEditorPaneQuestion4);

        question5selection.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        question5selection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DEFAULT", "TRUE", "FALSE" }));

        jEditorPaneQuestion5.setEditable(false);
        jScrollPane5.setViewportView(jEditorPaneQuestion5);

        javax.swing.GroupLayout trueOrFalsePortionPanelLayout = new javax.swing.GroupLayout(trueOrFalsePortionPanel);
        trueOrFalsePortionPanel.setLayout(trueOrFalsePortionPanelLayout);
        trueOrFalsePortionPanelLayout.setHorizontalGroup(
            trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trueOrFalsePortionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(question2selection, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(question3selection, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(question1selection, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(question4selection, javax.swing.GroupLayout.Alignment.LEADING, 0, 114, Short.MAX_VALUE)
                    .addComponent(question5selection, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        trueOrFalsePortionPanelLayout.setVerticalGroup(
            trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trueOrFalsePortionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(question1selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(question2selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(question3selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(question4selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(trueOrFalsePortionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(question5selection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(16, 16, 16)
                    .addComponent(trueOrFalsePortionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 482, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(trueOrFalsePortionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout TestPanelLayout = new javax.swing.GroupLayout(TestPanel);
        TestPanel.setLayout(TestPanelLayout);
        TestPanelLayout.setHorizontalGroup(
            TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(TestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(TestPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TestPanelLayout.createSequentialGroup()
                                .addComponent(four1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(four2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(four3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TestPanelLayout.createSequentialGroup()
                                .addComponent(three1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(three2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(three3, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblQ4)
                            .addGroup(TestPanelLayout.createSequentialGroup()
                                .addComponent(two1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(two2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(two3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblQ2)
                            .addComponent(lblQ3)
                            .addComponent(lblQ1)
                            .addGroup(TestPanelLayout.createSequentialGroup()
                                .addComponent(one1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(one2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(one3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(one4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(TestPanelLayout.createSequentialGroup()
                        .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(three4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(q3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                                .addComponent(q4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(four4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(two4, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(q2, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(TestPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(33, 33, 33)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TestPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        TestPanelLayout.setVerticalGroup(
            TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TestPanelLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TestPanelLayout.createSequentialGroup()
                        .addComponent(lblQ1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(q1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(one2)
                            .addComponent(one1)
                            .addComponent(one3)
                            .addComponent(one4))
                        .addGap(18, 18, 18)
                        .addComponent(lblQ2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(q2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(two2)
                            .addComponent(two3)
                            .addComponent(two4)
                            .addComponent(two1))
                        .addGap(18, 18, 18)
                        .addComponent(lblQ3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(q3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(three2)
                            .addComponent(three3)
                            .addComponent(three4)
                            .addComponent(three1))
                        .addGap(18, 18, 18)
                        .addComponent(lblQ4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(q4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(four2)
                    .addComponent(four3)
                    .addComponent(four4)
                    .addComponent(four1))
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(TestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(TestPanelLayout.createSequentialGroup()
                    .addGap(91, 91, 91)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(634, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TestPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TestPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void getDetails()
    {
        String stuNo = null;
        try
        {
            try
            {
                Scanner read = new Scanner(new FileInputStream("C:\\TestSetter\\tempFile.txt"));
                    stuNo = read.nextLine();
                    read.close();
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(this,"Student not found");
            }
            
                String sql = "select * from FullStudentDetails where StudentNumber='"+stuNo+"'";
                ResultSet data = new DataAccess().getData(sql);
                
                //System.out.print(""+data);
                String test_name = null;
                String student_number = null;
                String student_name = null;
                String student_surname = null;
                if(data.next())
                {
                    student_number = data.getString(1);  
                    student_name = data.getString(2).toUpperCase();
                    student_surname = data.getString(3).toUpperCase();
                }
                
                String init = ""+student_name.charAt(0);
                for(int c = 1;c < student_name.length();c++)
                {
                    if(Character.isWhitespace(student_name.charAt(c)))
                    {
                        init += student_name.charAt(c+1);
                    }
                }
                init += '.';
                lblName.setText(" "+init+" "+student_surname+" "+student_number);
        }
        catch(Exception ex){}
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        trueOrFalsePortionPanel.setVisible(false);
        TestPanel.setVisible(false);
        btnBack.setEnabled(false);
        btnNext4TorF.setVisible(false);
        getDetails();
        Activity();
    }//GEN-LAST:event_formWindowOpened
    //method that allows or denies access to user
    private void Activity()
    {
        try
        {
        int asw = 1;
        if(checkTest())
        {
            this.setVisible(false);
        asw  = JOptionPane.showConfirmDialog(null,"One Test Available, Would You Like To Take It?");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "NO TEST AVAILABLE");
            this.setVisible(false);
        }
        if(asw == 0)
        {
        String pass = ReadFromFile("C:\\TestSetter\\available tests\\test_name.txt");
        String password;
        do{
        password = JOptionPane.showInputDialog(null,"please enter the password for the test");
        
            if(password.equals(pass)){ 
                this.setVisible(true);
                 TestPanel.setVisible(true);
                 ReadTest();
            }
        }
        while(!password.equals(pass));
        }
        else
        {
            new StudentForm().setVisible(true);
            this.setVisible(false);
        }
    }
     catch(NullPointerException ex)
     {
         JOptionPane.showMessageDialog(this, ex);
     }
    }
    //method that checks whether there is an available test for the student or not
    private boolean checkTest()
    {
        boolean isAvailble = false;
        
        String path = "C:\\TestSetter\\available tests\\test_name.txt";
        
        if(ReadFromFile(path) != null)
        {
            isAvailble = true;
        }       
        return isAvailble;
    }
    
    //method that receives one parameter[FILE PATH] and reads from it
    private String ReadFromFile(String path)
    {
        String aStr = null;
        try
        (Scanner inputStream = new Scanner(new FileInputStream(path))) {
            
            while(inputStream.hasNext())
            {
                aStr = inputStream.nextLine();
            }
        }
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "FILE NOT FOUND");
        }
        return aStr;
    }
      
    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        SaveAnswers();
        SaveTorFanswers();
        clear();
        lblQ1.setText("Question"+(counter+1));
        lblQ2.setText("Question"+(counter+2));
        lblQ3.setText("Question"+(counter+3));
        lblQ4.setText("Question"+(counter+4));
        
        populateTestFields();
        btnBack.setEnabled(true);
    }//GEN-LAST:event_btnNextActionPerformed

    //method that checks and reads selected answers and saves them in respective array lists
    private void SaveAnswers()
    {
        //getting selected radio button from group1
        if(one1.isSelected())
        {
        testAnswers.add(one1.getText());
        }
        else if(one2.isSelected())
        {
        testAnswers.add(one2.getText());
        }
        else if(one3.isSelected())
        {
        testAnswers.add(one3.getText());
        }
        else if(one4.isSelected())
        {
        testAnswers.add(one4.getText());
        }
        else
        {
            testAnswers.add("nothing");
        }
        
        //getting selected radio button from group2
        if(two1.isSelected())
        {
        testAnswers.add(two1.getText());
        }
        else if(two2.isSelected())
        {
        testAnswers.add(two2.getText());
        }
        else if(two3.isSelected())
        {
        testAnswers.add(two3.getText());
        }
        else if(two4.isSelected())
        {
        testAnswers.add(two4.getText());
        }
        else
        {
            testAnswers.add("nothing");
        }
                        
         //getting selected radio button from group3       
        if(three1.isSelected())
        {
        testAnswers.add(three1.getText());
        }
        else if(three2.isSelected())
        {
        testAnswers.add(three2.getText());
        }
        else if(three3.isSelected())
        {
        testAnswers.add(three3.getText());
        }
        else if(three4.isSelected())
        {
        testAnswers.add(three4.getText());
        }
        else
        {
            testAnswers.add("nothing");
        }     
                
        //getting selected radio button from group4  
        if(four1.isSelected())
        {
        testAnswers.add(four1.getText());
        }
        else if(four2.isSelected())
        {
        testAnswers.add(four2.getText());
        }
        else if(four3.isSelected())
        {
        testAnswers.add(four3.getText());
        }
        else if(four4.isSelected())
        {
        testAnswers.add(four4.getText());
        }
        else
        {
            testAnswers.add("nothing");
        }
    }
  
    private String ReadTestName()
    {
        String aStr = null;
        try
        (Scanner inputStream = new Scanner(new FileInputStream("C:\\TestSetter\\available tests\\test_name.txt"))) {
            
                aStr = inputStream.nextLine();
        }
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "FILE NOT FOUND");
        }
        return aStr;
    }
         
    private void btnSaveAndSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAndSubmitActionPerformed
        SaveAnswers();
        SaveTorFanswers();
        int marks = 0;
        int count =0;
        try{
            while(count < activeTest.size())
            {
                if(testAnswers.get(count).equals(activeTest.get(count).getCorrectAnswer()))
                {
                    marks++;
                }
                count++;
            }
            count = 0;
            while(count < trueOrFalseAnswers.size())
            {
                if(trueOrFalseAnswers.get(count).equals(usersTorFanswers.get(count)))
                {
                    marks++;
                }
                count++;
            }

            double p = ((double)marks/(activeTest.size()+trueOrFalseAnswers.size()))*100;

            int per = (int)p;

            StudentsTakenTest(per);
            
            if(per <= 49){
                JOptionPane.showMessageDialog(this, "Try Harder Next Time \n"+marks +" Out Of "+(activeTest.size()+trueOrFalseAnswers.size())+"\n :(\n"+per+"%");
            }
            else{
                JOptionPane.showMessageDialog(this, "Congratulations, You Got "+marks +" Out Of "+(activeTest.size()+trueOrFalseAnswers.size())+"\n:)\n That's "+per+"%");
            }
            new StudentForm().setVisible(true);
            this.setVisible(false);
        }
        catch(HeadlessException ex)
        {
            JOptionPane.showMessageDialog(this,ex);
        }
    }//GEN-LAST:event_btnSaveAndSubmitActionPerformed
    
    void StudentsTakenTest(double per)
    {
        String stuNo = null;
        try
        {
            try
            {
                Scanner read = new Scanner(new FileInputStream("C:\\TestSetter\\tempFile.txt"));
                    stuNo = read.nextLine();
                    read.close();
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(this,"Student not found");
            }
            
                String sql = "select * from FullStudentDetails where StudentNumber='"+stuNo+"'";
                ResultSet data = new DataAccess().getData(sql);
                String student_number = null;
                String student_name = null;
                String student_surname = null;
                if(data.next())
                {
                    student_number = data.getString(1);  
                    student_name = data.getString(2);
                    student_surname = data.getString(3);
                }
                String  percentage = String.valueOf(per)+"%";
                //JOptionPane.showMessageDialog(this,"student no : "+student_number+"\ntest name : "+test_name+"\nstudent name : "+student_name+"\nstudent surname : "+student_surname+"\npercentage"+per);
                
                sql = "insert into ClassGrades (StudentNumber,TestName,StudentName,StudentSurname,PercentageMark) values('"+student_number+"','"+ReadTestName()+"','"+student_name+"','"+student_surname+"','"+percentage+"')";
                if(new DataAccess().Update(sql) == 1)
                {
                    JOptionPane.showMessageDialog(this, "TEST SUBMITTED");
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "TEST NOT SUBMITTED");
                }
        
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(this, "TEST NOT SUBMITTED");
        }
    }
    
    void SaveTorFanswers()
    {
        if(!" ".equals(jEditorPaneQuestion1.getText()))
        {
        usersTorFanswers.add(question1selection.getSelectedItem().toString());
        }
            if(!" ".equals(jEditorPaneQuestion2.getText()))
            {
            usersTorFanswers.add(question2selection.getSelectedItem().toString());
            }
                if(!" ".equals(jEditorPaneQuestion3.getText()))
                {
                usersTorFanswers.add(question3selection.getSelectedItem().toString());
                }
                    if(!" ".equals(jEditorPaneQuestion4.getText()))
                    {
                    usersTorFanswers.add(question4selection.getSelectedItem().toString());
                    }
                        if(!" ".equals(jEditorPaneQuestion5.getText()))
                        {
                        usersTorFanswers.add(question5selection.getSelectedItem().toString());
                        }
        
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        try{
            trueOrFalsePortionPanel.setVisible(false);
            if(counter <= 0)
            {
                throw new Exception();
            }

            lblQ1.setText("Question"+(counter-5));
            lblQ2.setText("Question"+(counter-4));
            lblQ3.setText("Question"+(counter-3));
            lblQ4.setText("Question"+(counter-2));

            counter -= 6;
            if(lblQ1.getText().equals("Question1"))
            {
                btnBack.setEnabled(false);
                btnNext.setEnabled(true);//
                btnSaveAndSubmit.setEnabled(false);
            }
            else
            {
                btnBack.setEnabled(true);
            }

            populateTestFields(); 
            getPreviousSelection();
        }
        catch(Exception ex)
        {
            
        }
        
    }//GEN-LAST:event_btnBackActionPerformed
    void getPreviousSelection(){
        //group1.setSelected(one1.getModel(), rootPaneCheckingEnabled);\///
    }
    private void btnNext4TorFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNext4TorFActionPerformed
       SaveTorFanswers();
       populateTorF();
    }//GEN-LAST:event_btnNext4TorFActionPerformed

    private void one1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_one1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_one1ActionPerformed
    private void ReadTest()
    {   
        Scanner inputStream = null;
        Scanner inputStream1;
        
        try
        {
            inputStream = new Scanner(new FileInputStream("C:\\TestSetter\\test\\testQuestions.txt"));
            inputStream1 = new Scanner(new FileInputStream("C:\\TestSetter\\test\\testAnswers.txt"));
            
            while(inputStream.hasNextLine())
            {
                TestModel obj = new TestModel();
                
                byte [] bytes = new FileCrypto().decrypt(inputStream.nextLine().getBytes());
                String aStr = new String(bytes);
                
                
                byte [] bytes1 = new FileCrypto().decrypt(inputStream1.nextLine().getBytes());
                String [] aStr1 = new String(bytes1).split("-");
                
                obj.setQuestion(aStr);
                obj.setAnswerA(aStr1[0]);
                obj.setAnswerB(aStr1[1]);
                obj.setAnswerC(aStr1[2]);
                obj.setAnswerD(aStr1[3]);
                obj.setCorrectAnswer(aStr1[4]);
                
                activeTest.add(obj);
                
            }
            
            if(activeTest.size() > 4)
            {
                btnSaveAndSubmit.setEnabled(false);
            }
        }
        catch(FileNotFoundException ex)
        {
            JOptionPane.showMessageDialog(null, "FILE NOT FOUND");
        }
        finally
        {
            inputStream.close();
            populateTestFields();
        }
        
    }
    private void populateTestFields()
    {
        try
        {
        //
            if(activeTest.size() == 0){
                q1.setVisible(false);
                q2.setVisible(false);
                q3.setVisible(false);
                q4.setVisible(false);
                
                one1.setVisible(false);
                one2.setVisible(false);
                one3.setVisible(false);
                one4.setVisible(false);
                
                two1.setVisible(false);
                two2.setVisible(false);
                two3.setVisible(false);
                two4.setVisible(false);
                
                three1.setVisible(false);
                three2.setVisible(false);
                three3.setVisible(false);
                three4.setVisible(false);
                
                four1.setVisible(false);
                four2.setVisible(false);
                four3.setVisible(false);
                four4.setVisible(false);
                
                lblQ1.setVisible(false);
                lblQ2.setVisible(false);
                lblQ3.setVisible(false);
                lblQ4.setVisible(false);
            }
            
        
        q1.setText(activeTest.get(counter).getQuestion());

        one1.setText(activeTest.get(counter).getAnswerA());
        one2.setText(activeTest.get(counter).getAnswerB());
        one3.setText(activeTest.get(counter).getAnswerC());
        one4.setText(activeTest.get(counter).getAnswerD());

        counter++;
        //
        try{
        lblQ2.setVisible(true);
        q2.setVisible(true);
        two1.setVisible(true);
        two2.setVisible(true);
        two3.setVisible(true);
        two4.setVisible(true);
        
        q2.setText(activeTest.get(counter).getQuestion());

        two1.setText(activeTest.get(counter).getAnswerA());
        two2.setText(activeTest.get(counter).getAnswerB());
        two3.setText(activeTest.get(counter).getAnswerC());
        two4.setText(activeTest.get(counter).getAnswerD());

        counter++;
        }
        catch(Exception ex){
         q2.setText(" ");
         
        two1.setText(" ");
        two2.setText(" ");
        two3.setText(" ");
        two4.setText(" ");
        
        lblQ2.setVisible(false);
        q2.setVisible(false);
        two1.setVisible(false);
        two2.setVisible(false);
        two3.setVisible(false);
        two4.setVisible(false);
        }
        //
        try{
        lblQ3.setVisible(true);
        q3.setVisible(true);
        three1.setVisible(true);
        three2.setVisible(true);
        three3.setVisible(true);
        three4.setVisible(true);
        
        q3.setText(activeTest.get(counter).getQuestion());

        three1.setText(activeTest.get(counter).getAnswerA());
        three2.setText(activeTest.get(counter).getAnswerB());
        three3.setText(activeTest.get(counter).getAnswerC());
        three4.setText(activeTest.get(counter).getAnswerD());
        counter++;
        }
        catch(Exception ex){
        q3.setText(" ");
        
        three1.setText(" ");
        three2.setText(" ");
        three3.setText(" ");
        three4.setText(" ");
        
        lblQ3.setVisible(false);
        q3.setVisible(false);
        three1.setVisible(false);
        three2.setVisible(false);
        three3.setVisible(false);
        three4.setVisible(false);
        }
        //
        try{
        lblQ4.setVisible(true);
        q4.setVisible(true);
        four1.setVisible(true);
        four2.setVisible(true);
        four3.setVisible(true);
        four4.setVisible(true);
        
        q4.setText(activeTest.get(counter).getQuestion());

        four1.setText(activeTest.get(counter).getAnswerA());
        four2.setText(activeTest.get(counter).getAnswerB());
        four3.setText(activeTest.get(counter).getAnswerC());
        four4.setText(activeTest.get(counter).getAnswerD());
        counter++;
        }
        catch(Exception ex){
        q4.setText(" ");
        
        
        four1.setText(" ");
        four2.setText(" ");
        four3.setText(" ");
        four4.setText(" ");
        
        lblQ4.setVisible(false);
        q4.setVisible(false);
        four1.setVisible(false);
        four2.setVisible(false);
        four3.setVisible(false);
        four4.setVisible(false);
        }
        
        //group1.setSelected(one1.getModel(), rootPaneCheckingEnabled);
        
        
        }
        catch(Exception ex)
        {
            
        }
      finally{
        if(counter >= activeTest.size())
        {
            trueOrFalsePortionPanel.setVisible(true);
            populateTorF();
            btnNext.setEnabled(false); 
        }
    }
    }
    void populateTorF()
    {
        try
        (Scanner inputStream = new Scanner(new FileInputStream("C:\\TestSetter\\test\\trueOrFalse.txt"))) {
            
            while(inputStream.hasNext())
            {
                byte[] bytes = new FileCrypto().decrypt(inputStream.nextLine().getBytes());
                String aStr = new String(bytes);
                String [] arr = aStr.split("-");
                trueOrFalseQuestions.add(arr[0]);
                trueOrFalseAnswers.add(arr[1]);
            }
            if(trueOrFalseQuestions.isEmpty())
            {
                btnSaveAndSubmit.setEnabled(true);
                trueOrFalsePortionPanel.setVisible(false);
            }
            else
            {
                btnSaveAndSubmit.setEnabled(false);
                InsertQuestions();
            }
                    
        }
        catch(FileNotFoundException ex)
        {
            
        }
    }
    void InsertQuestions()
    {
        try
        {
            try{
            jEditorPaneQuestion1.setText(trueOrFalseQuestions.get(trueFalseCounter));
            }
            catch(Exception ex)
            {
                jEditorPaneQuestion1.setText(" ");
            }
            try{
            trueFalseCounter++;
            jEditorPaneQuestion2.setText(trueOrFalseQuestions.get(trueFalseCounter));
            }
            catch(Exception ex)
            {
                jEditorPaneQuestion2.setText(" ");
            }
           try{
            trueFalseCounter++;
            jEditorPaneQuestion3.setText(trueOrFalseQuestions.get(trueFalseCounter));
            }
            catch(Exception ex)
            {
                jEditorPaneQuestion3.setText(" ");
            }
           try{
            trueFalseCounter++;
            jEditorPaneQuestion4.setText(trueOrFalseQuestions.get(trueFalseCounter));
            }
            catch(Exception ex)
            {
                jEditorPaneQuestion4.setText(" ");
            }
           try{
            trueFalseCounter++;
            jEditorPaneQuestion4.setText(trueOrFalseQuestions.get(trueFalseCounter));
            }
            catch(Exception ex)
            {
                jEditorPaneQuestion5.setText(" ");
            }
            
        }
        catch(Exception ex)
        {
            
        }
        finally
        {
            if(" ".equals(jEditorPaneQuestion5.getText()))
            {
                btnSaveAndSubmit.setEnabled(true);
            }
        }
    }
       
    private void clear()
    {
        q1.setText(null);
        q2.setText(null);
        q2.setText(null);
        q4.setText(null);
        
        group1.clearSelection();
        
        group2.clearSelection();
        
        group3.clearSelection();
        
        group4.clearSelection();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentPortal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new StudentPortal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TestPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnNext4TorF;
    private javax.swing.JButton btnSaveAndSubmit;
    private javax.swing.JRadioButton four1;
    private javax.swing.JRadioButton four2;
    private javax.swing.JRadioButton four3;
    private javax.swing.JRadioButton four4;
    private javax.swing.JEditorPane jEditorPaneQuestion1;
    private javax.swing.JEditorPane jEditorPaneQuestion2;
    private javax.swing.JEditorPane jEditorPaneQuestion3;
    private javax.swing.JEditorPane jEditorPaneQuestion4;
    private javax.swing.JEditorPane jEditorPaneQuestion5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblQ1;
    private javax.swing.JLabel lblQ2;
    private javax.swing.JLabel lblQ3;
    private javax.swing.JLabel lblQ4;
    private javax.swing.JRadioButton one1;
    private javax.swing.JRadioButton one2;
    private javax.swing.JRadioButton one3;
    private javax.swing.JRadioButton one4;
    private javax.swing.JLabel q1;
    private javax.swing.JLabel q2;
    private javax.swing.JLabel q3;
    private javax.swing.JLabel q4;
    private javax.swing.JComboBox<String> question1selection;
    private javax.swing.JComboBox<String> question2selection;
    private javax.swing.JComboBox<String> question3selection;
    private javax.swing.JComboBox<String> question4selection;
    private javax.swing.JComboBox<String> question5selection;
    private javax.swing.JRadioButton three1;
    private javax.swing.JRadioButton three2;
    private javax.swing.JRadioButton three3;
    private javax.swing.JRadioButton three4;
    private javax.swing.JPanel trueOrFalsePortionPanel;
    private javax.swing.JRadioButton two1;
    private javax.swing.JRadioButton two2;
    private javax.swing.JRadioButton two3;
    private javax.swing.JRadioButton two4;
    // End of variables declaration//GEN-END:variables
}
